---
name: CI
'on':
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: pip3 install yamllint ansible-lint ansible --pre

      - name: Lint code.
        run: |
          yamllint .
          ansible-lint roles

  molecule:
    name: Molecule
    runs-on: ubuntu-latest
    strategy:
      matrix:
        https: [false, true]
        cloudflare: [false, true]
        staging: [false, true]
        distro: [debian10]

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: pip3 install ansible molecule[docker] docker

      - name: Fix apparmor mess in ubuntu host!
        run: |
            set -x
            sudo apt-get remove mysql-server --purge
            sudo apt-get install apparmor-profiles
            sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld

      - name: Run Molecule tests.
        run: molecule test
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}
          HTTPS: ${{ matrix.https }}
          CLOUDFLARE: ${{ matrix.cloudflare }}
          STAGING: ${{ matrix.staging }}

  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [lint, molecule]
    name: Push to Galaxy
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install ansible-core.
        run: pip3 install ansible-core --pre

      - name: Build collection.
        run: ansible-galaxy collection build

      - name: Push to Ansible Galaxy.
        run: ansible-galaxy collection publish aminvakil-lamp-*.tar.gz --token ${{ secrets.GALAXY_API_KEY }}
